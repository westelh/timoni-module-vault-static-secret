// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f vault-secrets-operator/chart/crds/secrets.hashicorp.com_vaultstaticsecrets.yaml

package v1beta1

import "strings"

// VaultStaticSecret is the Schema for the vaultstaticsecrets API
#VaultStaticSecret: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "secrets.hashicorp.com/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "VaultStaticSecret"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// VaultStaticSecretSpec defines the desired state of
	// VaultStaticSecret
	spec!: #VaultStaticSecretSpec
}

// VaultStaticSecretSpec defines the desired state of
// VaultStaticSecret
#VaultStaticSecretSpec: {
	// Destination provides configuration necessary for syncing the
	// Vault secret to Kubernetes.
	destination!: {
		// Annotations to apply to the Secret. Requires Create to be set
		// to true.
		annotations?: {
			[string]: string
		}

		// Create the destination Secret.
		// If the Secret already exists this should be set to false.
		create?: bool

		// Labels to apply to the Secret. Requires Create to be set to
		// true.
		labels?: {
			[string]: string
		}

		// Name of the Secret
		name!: string

		// Overwrite the destination Secret if it exists and Create is
		// true. This is
		// useful when migrating to VSO from a previous secret deployment
		// strategy.
		overwrite?: bool

		// Transformation provides configuration for transforming the
		// secret data before
		// it is stored in the Destination.
		transformation?: {
			// ExcludeRaw data from the destination Secret. Exclusion policy
			// can be set
			// globally by including 'exclude-raw` in the
			// '--global-transformation-options'
			// command line flag. If set, the command line flag always takes
			// precedence over
			// this configuration.
			excludeRaw?: bool

			// Excludes contains regex patterns used to filter top-level
			// source secret data
			// fields for exclusion from the final K8s Secret data. These
			// pattern filters are
			// never applied to templated fields as defined in Templates. They
			// are always
			// applied before any inclusion patterns. To exclude all source
			// secret data
			// fields, you can configure the single pattern ".*".
			excludes?: [...string]

			// Includes contains regex patterns used to filter top-level
			// source secret data
			// fields for inclusion in the final K8s Secret data. These
			// pattern filters are
			// never applied to templated fields as defined in Templates. They
			// are always
			// applied last.
			includes?: [...string]

			// Templates maps a template name to its Template. Templates are
			// always included
			// in the rendered K8s Secret, and take precedence over templates
			// defined in a
			// SecretTransformation.
			templates?: {
				[string]: {
					// Name of the Template
					name?: string

					// Text contains the Go text template format. The template
					// references attributes from the data structure of the source
					// secret.
					// Refer to https://pkg.go.dev/text/template for more information.
					text!: string
				}
			}

			// TransformationRefs contain references to template configuration
			// from
			// SecretTransformation.
			transformationRefs?: [...{
				// IgnoreExcludes controls whether to use the
				// SecretTransformation's Excludes
				// data key filters.
				ignoreExcludes?: bool

				// IgnoreIncludes controls whether to use the
				// SecretTransformation's Includes
				// data key filters.
				ignoreIncludes?: bool

				// Name of the SecretTransformation resource.
				name!: string

				// Namespace of the SecretTransformation resource.
				namespace?: string

				// TemplateRefs map to a Template found in this TransformationRef.
				// If empty, then
				// all templates from the SecretTransformation will be rendered to
				// the K8s Secret.
				templateRefs?: [...{
					// KeyOverride to the rendered template in the Destination secret.
					// If Key is
					// empty, then the Key from reference spec will be used. Set this
					// to override the
					// Key set from the reference spec.
					keyOverride?: string

					// Name of the Template in SecretTransformationSpec.Templates.
					// the rendered secret data.
					name!: string
				}]
			}]
		}

		// Type of Kubernetes Secret. Requires Create to be set to true.
		// Defaults to Opaque.
		type?: string
	}

	// HMACSecretData determines whether the Operator computes the
	// HMAC of the Secret's data. The MAC value will be stored in
	// the resource's Status.SecretMac field, and will be used for
	// drift detection
	// and during incoming Vault secret comparison.
	// Enabling this feature is recommended to ensure that Secret's
	// data stays consistent with Vault.
	hmacSecretData?: bool

	// Mount for the secret in Vault
	mount!: string

	// Namespace of the secrets engine mount in Vault. If not set, the
	// namespace that's
	// part of VaultAuth resource will be inferred.
	namespace?: string

	// Path of the secret in Vault, corresponds to the `path`
	// parameter for,
	// kv-v1:
	// https://developer.hashicorp.com/vault/api-docs/secret/kv/kv-v1#read-secret
	// kv-v2:
	// https://developer.hashicorp.com/vault/api-docs/secret/kv/kv-v2#read-secret-version
	path!: string

	// RefreshAfter a period of time, in duration notation e.g. 30s,
	// 1m, 24h
	refreshAfter?: =~"^([0-9]+(\\.[0-9]+)?(s|m|h))$"

	// RolloutRestartTargets should be configured whenever the
	// application(s) consuming the Vault secret does
	// not support dynamically reloading a rotated secret.
	// In that case one, or more RolloutRestartTarget(s) can be
	// configured here. The Operator will
	// trigger a "rollout-restart" for each target whenever the Vault
	// secret changes between reconciliation events.
	// All configured targets will be ignored if HMACSecretData is set
	// to false.
	// See RolloutRestartTarget for more details.
	rolloutRestartTargets?: [...{
		// Kind of the resource
		kind!: "Deployment" | "DaemonSet" | "StatefulSet" | "argo.Rollout"

		// Name of the resource
		name!: string
	}]
	syncConfig?: {
		// InstantUpdates is a flag to indicate that event-driven updates
		// are
		// enabled for this VaultStaticSecret
		instantUpdates?: bool
	}

	// Type of the Vault static secret
	type!: "kv-v1" | "kv-v2"

	// VaultAuthRef to the VaultAuth resource, can be prefixed with a
	// namespace,
	// eg: `namespaceA/vaultAuthRefB`. If no namespace prefix is
	// provided it will default to the
	// namespace of the VaultAuth CR. If no value is specified for
	// VaultAuthRef the Operator will
	// default to the `default` VaultAuth, configured in the
	// operator's namespace.
	vaultAuthRef?: string

	// Version of the secret to fetch. Only valid for type kv-v2.
	// Corresponds to version query parameter:
	// https://developer.hashicorp.com/vault/api-docs/secret/kv/kv-v2#version
	version?: int & >=0
}
