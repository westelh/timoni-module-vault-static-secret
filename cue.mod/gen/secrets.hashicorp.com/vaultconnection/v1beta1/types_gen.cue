// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f vault-secrets-operator/chart/crds/secrets.hashicorp.com_vaultconnections.yaml

package v1beta1

import "strings"

// VaultConnection is the Schema for the vaultconnections API
#VaultConnection: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "secrets.hashicorp.com/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "VaultConnection"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// VaultConnectionSpec defines the desired state of
	// VaultConnection
	spec!: #VaultConnectionSpec
}

// VaultConnectionSpec defines the desired state of
// VaultConnection
#VaultConnectionSpec: {
	// Address of the Vault server
	address!: string

	// CACertSecretRef is the name of a Kubernetes secret containing
	// the trusted PEM encoded CA certificate chain as `ca.crt`.
	caCertSecretRef?: string

	// Headers to be included in all Vault requests.
	headers?: {
		[string]: string
	}

	// SkipTLSVerify for TLS connections.
	skipTLSVerify!: bool

	// Timeout applied to all Vault requests for this connection. If
	// not set, the
	// default timeout from the Vault API client config is used.
	timeout?: =~"^([0-9]+(\\.[0-9]+)?(s|m|h))$"

	// TLSServerName to use as the SNI host for TLS connections.
	tlsServerName?: string
}
